<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='tot_death' inline='true' name='federated.1iv7mqe13v2hul15knyoz13rtjay' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tot_death' name='textscan.0dziysw0epopvl16tksoe0c62kq1'>
            <connection class='textscan' directory='D:/github_repo/covid_analysis_protfolio_project/data_export' filename='tot_death.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dziysw0epopvl16tksoe0c62kq1' name='tot_death.csv' table='[tot_death#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dziysw0epopvl16tksoe0c62kq1' name='tot_death.csv' table='[tot_death#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tot_death.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[tot_death.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tot_death.csv_66DECE6B1CEF447F996E6FA20D7FF5F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death]</local-name>
            <parent-name>[tot_death.csv]</parent-name>
            <remote-alias>total_death</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tot_death.csv_66DECE6B1CEF447F996E6FA20D7FF5F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tot_death.csv' datatype='table' name='[__tableau_internal_object_id__].[tot_death.csv_66DECE6B1CEF447F996E6FA20D7FF5F5]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tot_death.csv' id='tot_death.csv_66DECE6B1CEF447F996E6FA20D7FF5F5'>
            <properties context=''>
              <relation connection='textscan.0dziysw0epopvl16tksoe0c62kq1' name='tot_death.csv' table='[tot_death#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='inf_rate' inline='true' name='federated.0o6v32q033vlbm1bq9rec1mh2f2d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='inf_rate' name='textscan.0j1egwl0f1qri0135c445106w1vv'>
            <connection class='textscan' directory='D:/github_repo/covid_analysis_protfolio_project/data_export' filename='inf_rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0j1egwl0f1qri0135c445106w1vv' name='inf_rate.csv' table='[inf_rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='MaxInfectionCt' ordinal='2' />
            <column datatype='real' name='InfectionRate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0j1egwl0f1qri0135c445106w1vv' name='inf_rate.csv' table='[inf_rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='MaxInfectionCt' ordinal='2' />
            <column datatype='real' name='InfectionRate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[inf_rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[inf_rate.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate.csv_9A387AC578F2427689802377D59A57C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[inf_rate.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate.csv_9A387AC578F2427689802377D59A57C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MaxInfectionCt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MaxInfectionCt]</local-name>
            <parent-name>[inf_rate.csv]</parent-name>
            <remote-alias>MaxInfectionCt</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate.csv_9A387AC578F2427689802377D59A57C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionRate]</local-name>
            <parent-name>[inf_rate.csv]</parent-name>
            <remote-alias>InfectionRate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate.csv_9A387AC578F2427689802377D59A57C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
      <column caption='Max Infection Ct' datatype='integer' name='[MaxInfectionCt]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='inf_rate.csv' datatype='table' name='[__tableau_internal_object_id__].[inf_rate.csv_9A387AC578F2427689802377D59A57C5]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='inf_rate.csv' id='inf_rate.csv_9A387AC578F2427689802377D59A57C5'>
            <properties context=''>
              <relation connection='textscan.0j1egwl0f1qri0135c445106w1vv' name='inf_rate.csv' table='[inf_rate#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='MaxInfectionCt' ordinal='2' />
                  <column datatype='real' name='InfectionRate' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_dat' inline='true' name='federated.1vuixds1xnndc40zne3ok0612y8k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_dat' name='textscan.1ncw13h0cvbctb1fm5jkw0xfr58w'>
            <connection class='textscan' directory='D:/github_repo/covid_analysis_protfolio_project/data_export' filename='covid_dat.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ncw13h0cvbctb1fm5jkw0xfr58w' name='covid_dat.csv' table='[covid_dat#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='MortalityRate' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ncw13h0cvbctb1fm5jkw0xfr58w' name='covid_dat.csv' table='[covid_dat#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='MortalityRate' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_dat.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid_dat.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_dat.csv_698032B5E83F441D90D953E5A21786A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid_dat.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_dat.csv_698032B5E83F441D90D953E5A21786A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MortalityRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MortalityRate]</local-name>
            <parent-name>[covid_dat.csv]</parent-name>
            <remote-alias>MortalityRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_dat.csv_698032B5E83F441D90D953E5A21786A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[MortalityRate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_dat.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_dat.csv_698032B5E83F441D90D953E5A21786A8]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_dat.csv' id='covid_dat.csv_698032B5E83F441D90D953E5A21786A8'>
            <properties context=''>
              <relation connection='textscan.1ncw13h0cvbctb1fm5jkw0xfr58w' name='covid_dat.csv' table='[covid_dat#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='MortalityRate' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='inf_rate_date' inline='true' name='federated.09we4500wd7uz416sda501oq5b6k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='inf_rate_date' name='textscan.1utelrh1pv10bg18fk6zs1rh8q2v'>
            <connection class='textscan' directory='D:/github_repo/covid_analysis_protfolio_project/data_export' filename='inf_rate_date.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1utelrh1pv10bg18fk6zs1rh8q2v' name='inf_rate_date.csv' table='[inf_rate_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='MaxInfectionCt' ordinal='3' />
            <column datatype='real' name='InfectionRate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1utelrh1pv10bg18fk6zs1rh8q2v' name='inf_rate_date.csv' table='[inf_rate_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='MaxInfectionCt' ordinal='3' />
            <column datatype='real' name='InfectionRate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MaxInfectionCt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MaxInfectionCt]</local-name>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias>MaxInfectionCt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionRate]</local-name>
            <parent-name>[inf_rate_date.csv]</parent-name>
            <remote-alias>InfectionRate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
      <column caption='Max Infection Ct' datatype='integer' name='[MaxInfectionCt]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='inf_rate_date.csv' datatype='table' name='[__tableau_internal_object_id__].[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/github_repo/covid_analysis_protfolio_project/data_export/inf_rate_date.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/08/2023 07:01:36 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='inf_rate_date' increment-value='%null%' refresh-type='create' rows-inserted='330758' timestamp-start='2023-08-08 19:01:34.411' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>inf_rate_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>inf_rate_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>inf_rate_date.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7096</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MaxInfectionCt</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MaxInfectionCt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MaxInfectionCt</remote-alias>
              <ordinal>3</ordinal>
              <family>inf_rate_date.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56935</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InfectionRate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[InfectionRate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>InfectionRate</remote-alias>
              <ordinal>4</ordinal>
              <family>inf_rate_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78711</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='inf_rate_date.csv' id='inf_rate_date.csv_A7C21CFCD1EF4B64B3F2F51CE7B31146'>
            <properties context=''>
              <relation connection='textscan.1utelrh1pv10bg18fk6zs1rh8q2v' name='inf_rate_date.csv' table='[inf_rate_date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='MaxInfectionCt' ordinal='3' />
                  <column datatype='real' name='InfectionRate' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C6B93ECB920248C29E5B441B346AFDC0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='cont count' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent' />
        <param name='target' value='cont count' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Global count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_dat' name='federated.1vuixds1xnndc40zne3ok0612y8k' />
          </datasources>
          <datasource-dependencies datasource='federated.1vuixds1xnndc40zne3ok0612y8k'>
            <column caption='Mortality Rate' datatype='real' name='[MortalityRate]' role='measure' type='quantitative' />
            <column-instance column='[MortalityRate]' derivation='Sum' name='[sum:MortalityRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:MortalityRate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:MortalityRate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]' value='107' />
            <format attr='height' value='70' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1vuixds1xnndc40zne3ok0612y8k].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1vuixds1xnndc40zne3ok0612y8k].[sum:MortalityRate:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1vuixds1xnndc40zne3ok0612y8k].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C19948A6-A91C-4B16-AB64-BAF2838007EB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infection vs Population Rate Heatmap
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='inf_rate' name='federated.0o6v32q033vlbm1bq9rec1mh2f2d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0o6v32q033vlbm1bq9rec1mh2f2d'>
            <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[InfectionRate]' derivation='Sum' name='[sum:InfectionRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Latitude (generated)]</column>
            <column>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Longitude (generated)]' field-type='quantitative' max='11636341.359751165' min='-19664637.231746912' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Latitude (generated)]' field-type='quantitative' max='15812210.107296616' min='-4396140.7607819764' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' value='Infection Rate'>
              <formatted-text>
                <run>Infection Rate</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-street-low' value='false' />
            <format attr='enabled' id='tunnel-street_limited-low' value='false' />
            <format attr='enabled' id='tunnel-track-case' value='false' />
            <format attr='enabled' id='tunnel-service-link-case' value='false' />
            <format attr='enabled' id='tunnel-street_limited-case' value='false' />
            <format attr='enabled' id='tunnel-street-case' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='tunnel-primary-case' value='false' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='false' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='false' />
            <format attr='enabled' id='tunnel-trunk-case' value='false' />
            <format attr='enabled' id='tunnel-motorway-case' value='false' />
            <format attr='enabled' id='tunnel-construction' value='false' />
            <format attr='enabled' id='tunnel-path' value='false' />
            <format attr='enabled' id='tunnel-cycleway-piste' value='false' />
            <format attr='enabled' id='tunnel-steps' value='false' />
            <format attr='enabled' id='tunnel-trunk_link' value='false' />
            <format attr='enabled' id='tunnel-motorway_link' value='false' />
            <format attr='enabled' id='tunnel-pedestrian' value='false' />
            <format attr='enabled' id='tunnel-track' value='false' />
            <format attr='enabled' id='tunnel-service-link' value='false' />
            <format attr='enabled' id='tunnel-street_limited' value='false' />
            <format attr='enabled' id='tunnel-street' value='false' />
            <format attr='enabled' id='tunnel-secondary-tertiary' value='false' />
            <format attr='enabled' id='tunnel-primary' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='tunnel-trunk' value='false' />
            <format attr='enabled' id='tunnel-motorway' value='false' />
            <format attr='enabled' id='tunnel-oneway-arrows-white' value='false' />
            <format attr='enabled' id='ferry' value='false' />
            <format attr='enabled' id='ferry-auto' value='false' />
            <format attr='enabled' id='road-path-bg' value='false' />
            <format attr='enabled' id='road-piste-bg' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor-bg' value='false' />
            <format attr='enabled' id='road-steps-bg' value='false' />
            <format attr='enabled' id='road-pedestrian-case' value='false' />
            <format attr='enabled' id='road-street-low' value='false' />
            <format attr='enabled' id='road-street_limited-low' value='false' />
            <format attr='enabled' id='road-track-case' value='false' />
            <format attr='enabled' id='road-service-link-case' value='false' />
            <format attr='enabled' id='road-street_limited-case' value='false' />
            <format attr='enabled' id='road-street-case' value='false' />
            <format attr='enabled' id='road-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='road-primary-case' value='false' />
            <format attr='enabled' id='road-motorway_link-case' value='false' />
            <format attr='enabled' id='road-trunk_link-case' value='false' />
            <format attr='enabled' id='road-trunk-case' value='false' />
            <format attr='enabled' id='road-motorway-case' value='false' />
            <format attr='enabled' id='road-construction' value='false' />
            <format attr='enabled' id='road-sidewalk-corridor' value='false' />
            <format attr='enabled' id='road-path-smooth' value='false' />
            <format attr='enabled' id='road-path-rough' value='false' />
            <format attr='enabled' id='road-cycleway-piste' value='false' />
            <format attr='enabled' id='road-steps' value='false' />
            <format attr='enabled' id='road-trunk_link' value='false' />
            <format attr='enabled' id='road-motorway_link' value='false' />
            <format attr='enabled' id='road-pedestrian' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-fill' value='false' />
            <format attr='enabled' id='road-pedestrian-polygon-pattern' value='false' />
            <format attr='enabled' id='road-polygon' value='false' />
            <format attr='enabled' id='road-track' value='false' />
            <format attr='enabled' id='road-service-link' value='false' />
            <format attr='enabled' id='road-street_limited' value='false' />
            <format attr='enabled' id='road-street' value='false' />
            <format attr='enabled' id='road-secondary-tertiary' value='false' />
            <format attr='enabled' id='road-primary' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='road-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='road-trunk' value='false' />
            <format attr='enabled' id='road-motorway' value='false' />
            <format attr='enabled' id='road-rail' value='false' />
            <format attr='enabled' id='road-rail-tracks' value='false' />
            <format attr='enabled' id='level-crossing' value='false' />
            <format attr='enabled' id='road-oneway-arrows-white' value='false' />
            <format attr='enabled' id='bridge-path-bg' value='false' />
            <format attr='enabled' id='bridge-piste-bg' value='false' />
            <format attr='enabled' id='bridge-steps-bg' value='false' />
            <format attr='enabled' id='bridge-pedestrian-case' value='false' />
            <format attr='enabled' id='bridge-street-low' value='false' />
            <format attr='enabled' id='bridge-street_limited-low' value='false' />
            <format attr='enabled' id='bridge-track-case' value='false' />
            <format attr='enabled' id='bridge-service-link-case' value='false' />
            <format attr='enabled' id='bridge-street_limited-case' value='false' />
            <format attr='enabled' id='bridge-street-case' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary-case' value='false' />
            <format attr='enabled' id='bridge-primary-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-case' value='false' />
            <format attr='enabled' id='bridge-trunk-case' value='false' />
            <format attr='enabled' id='bridge-motorway-case' value='false' />
            <format attr='enabled' id='bridge-construction' value='false' />
            <format attr='enabled' id='bridge-path' value='false' />
            <format attr='enabled' id='bridge-cycleway-piste' value='false' />
            <format attr='enabled' id='bridge-steps' value='false' />
            <format attr='enabled' id='bridge-trunk_link' value='false' />
            <format attr='enabled' id='bridge-motorway_link' value='false' />
            <format attr='enabled' id='bridge-pedestrian' value='false' />
            <format attr='enabled' id='bridge-track' value='false' />
            <format attr='enabled' id='bridge-service-link' value='false' />
            <format attr='enabled' id='bridge-street_limited' value='false' />
            <format attr='enabled' id='bridge-street' value='false' />
            <format attr='enabled' id='bridge-secondary-tertiary' value='false' />
            <format attr='enabled' id='bridge-primary' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-minor' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-blue-major' value='false' />
            <format attr='enabled' id='bridge-trunk' value='false' />
            <format attr='enabled' id='bridge-motorway' value='false' />
            <format attr='enabled' id='bridge-rail' value='false' />
            <format attr='enabled' id='bridge-rail-tracks' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk-2-case' value='false' />
            <format attr='enabled' id='bridge-motorway-2-case' value='false' />
            <format attr='enabled' id='bridge-trunk_link-2' value='false' />
            <format attr='enabled' id='bridge-motorway_link-2' value='false' />
            <format attr='enabled' id='bridge-trunk-2' value='false' />
            <format attr='enabled' id='bridge-motorway-2' value='false' />
            <format attr='enabled' id='bridge-oneway-arrows-white' value='false' />
            <format attr='enabled' id='road-label-small' value='false' />
            <format attr='enabled' id='road-label-medium' value='false' />
            <format attr='enabled' id='road-label-large' value='false' />
            <format attr='enabled' id='road-shields-black' value='false' />
            <format attr='enabled' id='road-shields-white' value='false' />
            <format attr='enabled' id='motorway-junction' value='false' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-2-boundaries' value='false' />
            <format attr='enabled' id='admin-2-boundaries-dispute' value='false' />
            <format attr='enabled' id='country-label-sm' value='false' />
            <format attr='enabled' id='country-label-md' value='false' />
            <format attr='enabled' id='country-label-lg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries' value='false' />
            <format attr='enabled' id='state-label-sm' value='false' />
            <format attr='enabled' id='state-label-md' value='false' />
            <format attr='enabled' id='state-label-lg' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='place-hamlet' value='false' />
            <format attr='enabled' id='place-village' value='false' />
            <format attr='enabled' id='place-town' value='false' />
            <format attr='enabled' id='place-city-sm' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal-2' value='false' />
            <format attr='enabled' id='place-city-md-s' value='false' />
            <format attr='enabled' id='place-city-md-n' value='false' />
            <format attr='enabled' id='place-city-lg-s' value='false' />
            <format attr='enabled' id='place-city-lg-n' value='false' />
            <format attr='enabled' id='place-island' value='false' />
            <format attr='enabled' id='place-island-2' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l15' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l1' value='false' />
            <format attr='enabled' id='poi-parks_scalerank4' value='false' />
            <format attr='enabled' id='poi-scalerank3' value='false' />
            <format attr='enabled' id='poi-parks-scalerank3' value='false' />
            <format attr='enabled' id='poi-outdoor-features' value='false' />
            <format attr='enabled' id='poi-outdoor-features-2' value='false' />
            <format attr='enabled' id='mountain-peak-label' value='false' />
            <format attr='enabled' id='mountain-peak-label-with-elevation' value='false' />
            <format attr='enabled' id='poi-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank1' value='false' />
            <format attr='enabled' id='poi-scalerank1' value='false' />
            <format attr='enabled' id='airport-label' value='false' />
            <format attr='enabled' id='place-residential' value='false' />
            <format attr='enabled' id='place-neighbourhood' value='false' />
            <format attr='enabled' id='place-suburb' value='false' />
            <format attr='enabled' id='rail-label' value='false' />
            <format attr='enabled' id='building-line' value='false' />
            <format attr='enabled' id='building' value='false' />
            <format attr='enabled' id='housenum-label' value='false' />
            <format attr='enabled' id='contour-line' value='false' />
            <format attr='enabled' id='contour-line-index' value='false' />
            <format attr='enabled' id='contour-label' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[none:location:nk]' />
              <color column='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' />
              <geometry column='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Latitude (generated)]</rows>
        <cols>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{337C9E15-0EC0-45E3-A4A5-641D075A0967}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cumulative Population Infection Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='inf_rate_date' name='federated.09we4500wd7uz416sda501oq5b6k' />
          </datasources>
          <datasource-dependencies datasource='federated.09we4500wd7uz416sda501oq5b6k'>
            <column caption='Infection Rate' datatype='real' name='[InfectionRate]' role='measure' type='quantitative' />
            <column-instance column='[InfectionRate]' derivation='Avg' name='[avg:InfectionRate:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09we4500wd7uz416sda501oq5b6k].[avg:InfectionRate:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]' included-values='in-range'>
            <min>#2020-01-01 00:00:00#</min>
            <max>#2023-07-29 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]</column>
            <column>[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]</column>
            <column>[federated.09we4500wd7uz416sda501oq5b6k].[avg:InfectionRate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]' />
              <text column='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]' />
              <text column='[federated.09we4500wd7uz416sda501oq5b6k].[avg:InfectionRate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09we4500wd7uz416sda501oq5b6k].[avg:InfectionRate:qk]</rows>
        <cols>[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{AB03CEF9-B953-4EF6-A059-7935A8A80F13}' />
    </worksheet>
    <worksheet name='cont count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths by Continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tot_death' name='federated.1iv7mqe13v2hul15knyoz13rtjay' />
          </datasources>
          <datasource-dependencies datasource='federated.1iv7mqe13v2hul15knyoz13rtjay'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death]' derivation='Sum' name='[sum:total_death:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' value='110' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1iv7mqe13v2hul15knyoz13rtjay].[sum:total_death:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' />
              <text column='[federated.1iv7mqe13v2hul15knyoz13rtjay].[sum:total_death:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iv7mqe13v2hul15knyoz13rtjay].[sum:total_death:qk]</rows>
        <cols>[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{7122B264-643B-4BF0-9E1B-3448F1AA635B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98306' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='847'>
            <zone h='98306' id='6' type-v2='layout-basic' w='90287' x='468' y='847'>
              <zone h='16632' id='3' name='Global count' w='26650' x='468' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='72352' id='5' name='cont count' w='26650' x='468' y='26801'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='63984' id='10' name='Sheet 3' w='63637' x='27118' y='35169'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34322' id='12' name='Sheet 4' w='63637' x='27118' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9322' id='9' name='cont count' pane-specification-id='0' param='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' type-v2='color' w='26650' x='468' y='17479'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='150' h='98306' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='8777' x='90755' y='847'>
              <zone fixed-size='361' h='39089' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='2' param='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]' type-v2='color' w='8777' x='90755' y='847'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6885' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' type-v2='color' w='8777' x='90755' y='39936'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98306' id='20' param='vert' type-v2='layout-flow' w='99064' x='468' y='847'>
                <zone fixed-size='125' h='16632' id='3' is-fixed='true' name='Global count' w='26650' x='468' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34322' id='12' is-fixed='true' name='Sheet 4' w='63637' x='27118' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='361' h='39089' id='13' name='Sheet 4' pane-specification-id='2' param='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]' type-v2='color' w='8777' x='90755' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72352' id='5' is-fixed='true' name='cont count' w='26650' x='468' y='26801'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9322' id='9' name='cont count' pane-specification-id='0' param='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' type-v2='color' w='26650' x='468' y='17479'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63984' id='10' is-fixed='true' name='Sheet 3' w='63637' x='27118' y='35169'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6885' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' type-v2='color' w='8777' x='90755' y='39936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{81A8A9EA-05CB-4D23-8CB4-BD912394BEAC}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Global count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vuixds1xnndc40zne3ok0612y8k].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36F46F29-C54B-4AF0-B13A-78FCE2DB3A30}' />
    </window>
    <window class='worksheet' name='cont count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3CE1A575-69BA-4AF2-AC4C-9A20C502EBF9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[none:location:nk]</field>
            <field>[federated.0o6v32q033vlbm1bq9rec1mh2f2d].[sum:InfectionRate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC6B3230-2D94-4EC0-B032-8A077FF913AD}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='153'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.09we4500wd7uz416sda501oq5b6k].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]</field>
            <field>[federated.09we4500wd7uz416sda501oq5b6k].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2E2D4D2-42E9-4C8F-98BD-3A7831496705}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Global count' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09we4500wd7uz416sda501oq5b6k].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='cont count'>
          <zoom type='entire-view' />
          <highlight field='[federated.1iv7mqe13v2hul15knyoz13rtjay].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{289F8975-C073-4307-ABAA-39EAA41658C1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='75' name='Global count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='cont count' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
